{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\varis\\\\Downloads\\\\react-chat-app-firebase-public-main\\\\src\\\\components\\\\Chat.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport Message from './Message';\nimport SendMessage from './SendMessage';\nimport { db } from '../firebase';\nimport { query, collection, orderBy, onSnapshot } from 'firebase/firestore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst style = {\n  main: `flex flex-col p-[10px]`,\n  chatContainer: {\n    maxHeight: '400px',\n    // Set a max height for the chat container\n    overflowY: 'auto' // Add a vertical scrollbar when content overflows\n\n  }\n};\n\nconst Chat = () => {\n  _s();\n\n  const [messages, setMessages] = useState([]);\n  const scroll = useRef();\n  useEffect(() => {\n    const q = query(collection(db, 'messages'), orderBy('timestamp'));\n    const unsubscribe = onSnapshot(q, querySnapshot => {\n      let messages = [];\n      querySnapshot.forEach(doc => {\n        messages.push({ ...doc.data(),\n          id: doc.id\n        });\n      });\n      setMessages(messages);\n    });\n    return () => unsubscribe();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: style.chatContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"main\", {\n      className: style.main,\n      children: messages && messages.map(message => /*#__PURE__*/_jsxDEV(Message, {\n        message: message\n      }, message.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SendMessage, {\n      scroll: scroll\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      ref: scroll\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Chat, \"qLF6HWpbAEbJLqWaVt1/GGbZ5Lk=\");\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Message","SendMessage","db","query","collection","orderBy","onSnapshot","style","main","chatContainer","maxHeight","overflowY","Chat","messages","setMessages","scroll","q","unsubscribe","querySnapshot","forEach","doc","push","data","id","map","message"],"sources":["C:/Users/varis/Downloads/react-chat-app-firebase-public-main/src/components/Chat.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport Message from './Message';\nimport SendMessage from './SendMessage';\nimport { db } from '../firebase';\nimport { query, collection, orderBy, onSnapshot } from 'firebase/firestore';\n\nconst style = {\n  main: `flex flex-col p-[10px]`,\n  chatContainer: {\n    maxHeight: '400px', // Set a max height for the chat container\n    overflowY: 'auto',   // Add a vertical scrollbar when content overflows\n  },\n};\n\nconst Chat = () => {\n  const [messages, setMessages] = useState([]);\n  const scroll = useRef();\n\n  useEffect(() => {\n    const q = query(collection(db, 'messages'), orderBy('timestamp'));\n    const unsubscribe = onSnapshot(q, (querySnapshot) => {\n      let messages = [];\n      querySnapshot.forEach((doc) => {\n        messages.push({ ...doc.data(), id: doc.id });\n      });\n      setMessages(messages);\n    });\n    return () => unsubscribe();\n  }, []);\n\n  return (\n    <div style={style.chatContainer}>\n      <main className={style.main}>\n        {messages &&\n          messages.map((message) => (\n            <Message key={message.id} message={message} />\n          ))}\n      </main>\n      {/* Send Message Compoenent */}\n      <SendMessage scroll={scroll} />\n      <span ref={scroll}></span>\n    </div>\n  );\n};\n\nexport default Chat;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,EAAT,QAAmB,aAAnB;AACA,SAASC,KAAT,EAAgBC,UAAhB,EAA4BC,OAA5B,EAAqCC,UAArC,QAAuD,oBAAvD;;AAEA,MAAMC,KAAK,GAAG;EACZC,IAAI,EAAG,wBADK;EAEZC,aAAa,EAAE;IACbC,SAAS,EAAE,OADE;IACO;IACpBC,SAAS,EAAE,MAFE,CAEQ;;EAFR;AAFH,CAAd;;AAQA,MAAMC,IAAI,GAAG,MAAM;EAAA;;EACjB,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BjB,QAAQ,CAAC,EAAD,CAAxC;EACA,MAAMkB,MAAM,GAAGhB,MAAM,EAArB;EAEAD,SAAS,CAAC,MAAM;IACd,MAAMkB,CAAC,GAAGb,KAAK,CAACC,UAAU,CAACF,EAAD,EAAK,UAAL,CAAX,EAA6BG,OAAO,CAAC,WAAD,CAApC,CAAf;IACA,MAAMY,WAAW,GAAGX,UAAU,CAACU,CAAD,EAAKE,aAAD,IAAmB;MACnD,IAAIL,QAAQ,GAAG,EAAf;MACAK,aAAa,CAACC,OAAd,CAAuBC,GAAD,IAAS;QAC7BP,QAAQ,CAACQ,IAAT,CAAc,EAAE,GAAGD,GAAG,CAACE,IAAJ,EAAL;UAAiBC,EAAE,EAAEH,GAAG,CAACG;QAAzB,CAAd;MACD,CAFD;MAGAT,WAAW,CAACD,QAAD,CAAX;IACD,CAN6B,CAA9B;IAOA,OAAO,MAAMI,WAAW,EAAxB;EACD,CAVQ,EAUN,EAVM,CAAT;EAYA,oBACE;IAAK,KAAK,EAAEV,KAAK,CAACE,aAAlB;IAAA,wBACE;MAAM,SAAS,EAAEF,KAAK,CAACC,IAAvB;MAAA,UACGK,QAAQ,IACPA,QAAQ,CAACW,GAAT,CAAcC,OAAD,iBACX,QAAC,OAAD;QAA0B,OAAO,EAAEA;MAAnC,GAAcA,OAAO,CAACF,EAAtB;QAAA;QAAA;QAAA;MAAA,QADF;IAFJ;MAAA;MAAA;MAAA;IAAA,QADF,eAQE,QAAC,WAAD;MAAa,MAAM,EAAER;IAArB;MAAA;MAAA;MAAA;IAAA,QARF,eASE;MAAM,GAAG,EAAEA;IAAX;MAAA;MAAA;MAAA;IAAA,QATF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAaD,CA7BD;;GAAMH,I;;KAAAA,I;AA+BN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}